alias funNo R1;
alias currPID R2;
if(funNo == FREE_USER_AREA_PAGE)then
    //print "UPTR";
    alias userpage R6;
    userpage = [PROCESS_TABLE + currPID*16 + 11];
    multipush(R1, R2, R6);
    R2 = userpage;
    R1 = RELEASE_PAGE;
    call MOD_2;
    multipop(R1, R2, R6);
    return;
endif;
if(funNo == EXIT_PROCESS) then
    //print "exit pro";
    multipush(R1, R2);

    //freeing the pagetable entries.
    R1 = FREE_PAGE_TABLE;
    call MOD_1;

    //freeing the userareapage of the program.
    R1 = FREE_USER_AREA_PAGE;
    call MOD_1;

    multipop(R1, R2);
    [PROCESS_TABLE + currPID*16 + 4]=TERMINATED;

    return;
endif;
if(funNo == FREE_PAGE_TABLE)then
    alias page R7;
    alias auxilary R8;
    page = 4;
    auxilary = 5;
    while(page < 20)do

        //releasing the page
        multipush(R1, R2, R7, R8);
        R1 = RELEASE_PAGE;
        R2 = [PAGE_TABLE_BASE + 20*currPID + page];
        call MOD_2;
        multipop(R1, R2, R7, R8);

        //invalidating the entries in page table
        [PAGE_TABLE_BASE + 20*currPID + page] = -1;
        [PAGE_TABLE_BASE + 20*currPID + auxilary] = "0000";
        page = page + 2;
        auxilary = auxilary + 2;

    endwhile;
    alias counter R6;
    counter = 2;
    while(counter<10)do
        if([DISK_MAP_TABLE + currPID*10 + counter]!=-1 && (counter < 4 || counter > 7))then
            multipush(R1, R2, R3, R4, R5, R6);
            R1 = RELEASE_BLOCK;
            R2 = [DISK_MAP_TABLE + currPID*10 + counter];
            call MOD_2;
            multipop(R1, R2, R3, R4, R5, R6);
        endif;
        counter = counter + 1;

    endwhile;
    //invalidate all entries of disk map table.
    counter = 0;
    while(counter<10)do
        [DISK_MAP_TABLE + counter] = -1;
        counter = counter + 1;
    endwhile;
    return;
endif;