alias funNo R1;


if(funNo == GET_FREE_PAGE)then
    //print "getfree while";
    [SYSTEM_STATUS_TABLE + 3] = [SYSTEM_STATUS_TABLE + 3] + 1;
    while([SYSTEM_STATUS_TABLE + 2] == 0)do
        [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 4] = WAIT_MEM;
        multipush(R1, R2);
        //print "sheduling";
        call MOD_5;
        multipop(R1, R2);
    endwhile;
    [SYSTEM_STATUS_TABLE + 2] = [SYSTEM_STATUS_TABLE + 2] - 1;
    [SYSTEM_STATUS_TABLE + 3] = [SYSTEM_STATUS_TABLE + 3] - 1;

    alias freepage R0;
    freepage = 83;
    while(freepage<128 && [MEMORY_FREE_LIST + freepage]!=0)do   
        freepage = freepage + 1;
    endwhile;

    [MEMORY_FREE_LIST + freepage] = 1;
    return;
endif;
if(funNo == RELEASE_PAGE)then 
    alias RelPage R2;
    [MEMORY_FREE_LIST + RelPage] = [MEMORY_FREE_LIST + RelPage] - 1;
    if([MEMORY_FREE_LIST + RelPage]==0)then 
        [SYSTEM_STATUS_TABLE + 2] = [SYSTEM_STATUS_TABLE + 2] + 1;
        alias count R7;
        count = 0;
        while(count < 16)do 
            if([PROCESS_TABLE + count*16 + 1]!=-1 && [PROCESS_TABLE + count*16 + 4]==WAIT_MEM)then
                [PROCESS_TABLE + count*16 + 4]=READY;
            endif;
            count = count + 1;
        endwhile;
    endif;
    R0 = RelPage;
    return;
endif;  

//release block function
if(funNo == RELEASE_BLOCK)then
    [DISK_FREE_LIST + R2] = [DISK_FREE_LIST + R2] - 1;
    return;
endif;

//get code page
if(funNo == GET_CODE_PAGE)then
    alias i R6;
    alias j R7;
    alias ptbr R8;
    alias block_num R2;
    i = 0;
    while(i<16)do
        j = 4;
        ptbr = [PROCESS_TABLE + i*16 + 14];
        while(j<8)do
            if([DISK_MAP_TABLE + i*10 + j]==block_num && [ptbr + 2*j]!=-1)then
                R0 = [ptbr + 2*j];
                [MEMORY_FREE_LIST +R0] = [MEMORY_FREE_LIST + R0] + 1;
                return; 
            endif;
            j = j+ 1;
        endwhile;
        i = i + 1;
    endwhile;
    multipush(R1, R2);
    R1 = GET_FREE_PAGE;
    call MOD_2;
    multipop(R1, R2);
    multipush(R0, R1, R2, R3);
    R1 = DISK_LOAD;
    //while calling get_code_page the R2 is set as the block number
    R4 = block_num;
    R2 = [SYSTEM_STATUS_TABLE + 1];
    R3 = R0;
    call MOD_4;
    multipop(R0, R1, R2, R3);
endif;

return;