alias userSP R0;
R0 = SP;

[PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 9] = INT_SHUTDOWN;

[PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 13] = SP;
SP = [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 11]* 512 - 1;

if([SYSTEM_STATUS_TABLE + 1] != SHELL_PROCESS || [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 3] != ROOT)then
    [[PTBR + 2 * ((userSP - 1) / 512)] * 512 + ((userSP - 1) % 512)] = -1;
    [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 9] = 0;    
    SP = [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 13];
    ireturn;
endif;

multipush(R0);
R1 = KILL_ALL;
R2 = [SYSTEM_STATUS_TABLE + 1];
call MOD_1;
multipop(R0);

alias counter R1;
counter = 0;
while(counter<4)do
    if(([BUFFER_TABLE + counter*4 + 1] == 1) && ([BUFFER_TABLE + counter*4] != -1))then

        multipush(R0, R1);
        R4 = [BUFFER_TABLE + counter*4];
        R3 = BUFFER_BASE + counter;
        R2 = [SYSTEM_STATUS_TABLE + 1];
        R1 = DISK_STORE;
        call MOD_4;
        multipop(R0, R1);
    
    endif;
    counter = counter + 1;
endwhile;

//INODE TABLE
multipush(R1, R2, R3, R4);
R1 = DISK_STORE;
R2 = [SYSTEM_STATUS_TABLE + 1];
R3 = 59;
R4 = 3;
call MOD_4;

R1 = DISK_STORE;
R2 = [SYSTEM_STATUS_TABLE + 1];
R3 = 60;
R4 = 4;
call MOD_4;

//ROOT FILE
R1 = DISK_STORE;
R2 = [SYSTEM_STATUS_TABLE + 1];
R3 = 62;
R4 = 5;
call MOD_4;

//DISK FREE LIST
R1 = DISK_STORE;
R2 = [SYSTEM_STATUS_TABLE + 1];
R3 = 61;
R4 = 2;
call MOD_4;

multipop(R1, R2, R3, R4);


halt;