alias funNum R1;
alias currPID R2;

if(funNum == SWAP_OUT)then
    alias swapPID R3;
    swapPID = 3;
    while(swapPID < 15)do
        if([PROCESS_TABLE + swapPID*16 + 6] == 0 && [PROCESS_TABLE + swapPID*16 + 4]  == WAIT_PROCESS)then
            break;
        endif;
        swapPID = swapPID + 1;
    endwhile;

    if(swapPID == 15)then
        swapPID = 3;
        while(swapPID < 15)do
            if([PROCESS_TABLE + swapPID*16 + 6] == 0 && [PROCESS_TABLE + swapPID*16 + 4]  == WAIT_SEMAPHORE)then
                break;
            endif;
            swapPID = swapPID + 1;
        endwhile;

        if(swapPID == 15)then
            swapPID = -1;
            alias counter R4;
            alias max R5;
            max = 0;
            counter = 3;
            while(counter < 15)do
                if([PROCESS_TABLE + counter*16 + 4] != RUNNING && [PROCESS_TABLE + counter*16 + 4] != TERMINATED && [PROCESS_TABLE + counter*16 + 4]  != ALLOCATED && [PROCESS_TABLE + counter*16 + 6] != 1)then
                    if([PROCESS_TABLE + counter*16] > max)then
                        max = [PROCESS_TABLE + counter*16];
                        swapPID = counter;
                    endif;
                endif;  
                counter = counter + 1;
            endwhile;
        endif;

        if(swapPID == -1)then
            [SYSTEM_STATUS_TABLE + 5] = 0;
            return;
        endif;
    endif;
                       
    [PROCESS_TABLE + swapPID*16] = 0;
    
    alias counter R4;
    alias swapPTBR R5;

    swapPTBR = PAGE_TABLE_BASE + swapPID*20;
    counter = 2;

    while(counter < 10)do
        if(counter > 3 && counter < 8)then
            if([swapPTBR + 2*counter] != -1)then
                multipush(R1, R2, R3, R4, R5);
                R1 = RELEASE_PAGE;
                R2 = [swapPTBR + 2*counter];
                call MOD_2;
                multipop(R1, R2, R3, R4, R5);

                [swapPTBR + 2*counter] = -1;
                [swapPTBR + 2*counter + 1] = "0000";
            endif;
        else
            if([swapPTBR + 2*counter] != -1 && (([MEMORY_FREE_LIST + [swapPTBR + 2*counter]] == 1 && counter < 4) || (counter == 8 || counter == 9)))then
                multipush(R1, R2, R3, R4, R5);
                R1 = GET_SWAP_BLOCK;
                call MOD_2;
                multipop(R1, R2, R3, R4, R5);

                [DISK_MAP_TABLE + swapPID*10 + counter] = R0;

                multipush(R1, R2, R3, R4, R5);
                R1 = DISK_STORE;
                R2 = SWAPPER_DAEMON;
                R3 = [swapPTBR + 2*counter];
                R4 = R0;
                call MOD_4;
                multipop(R1, R2, R3, R4, R5);

                multipush(R1, R2, R3, R4, R5);
                R1 = RELEASE_PAGE;
                R2 = [swapPTBR + 2*counter];
                call MOD_2;
                multipop(R1, R2, R3, R4, R5);
                
                [swapPTBR + 2*counter] = -1;
                [swapPTBR + 2*counter + 1] = "0000";
            endif;
        endif;
        counter = counter + 1;
    endwhile;
    
    [PROCESS_TABLE + swapPID*16 + 6] = 1;
    [SYSTEM_STATUS_TABLE + 4] = [SYSTEM_STATUS_TABLE + 4] + 1;
    [SYSTEM_STATUS_TABLE + 5] = 0;
endif;

if(funNum == SWAP_IN)then
    
    alias swapPID R3;
    alias counter R4;
    alias max R5;

    max = 0;
    swapPID = -1;
    counter = 3;
    while(counter < 15)do
        if([PROCESS_TABLE + counter*16 + 6] == 1 && ([PROCESS_TABLE + counter*16 + 4] == READY || [PROCESS_TABLE + counter*16 + 4] == CREATED) && [PROCESS_TABLE + counter*16] > max)then
            max = [PROCESS_TABLE + counter*16];
            swapPID = counter;
        endif;
        counter = counter + 1;
    endwhile;

    if(swapPID != -1)then
        alias swapPTBR R6;
        swapPTBR = PAGE_TABLE_BASE + swapPID*20;
        counter = 2;
        while(counter < 10)do
            if([DISK_MAP_TABLE + swapPID*10 + counter] != -1 && ((counter == 2 || counter == 3) || (counter == 8 || counter ==9)))then
                multipush(R1, R2, R3, R4, R5, R6);
                R1 = GET_FREE_PAGE;
                call MOD_2;
                multipop(R1, R2, R3, R4, R5, R6);

                [swapPTBR + 2*counter] = R0;
                [swapPTBR + 2*counter + 1] = "0110";

                multipush(R1, R2, R3, R4, R5, R6);
                R4 = [DISK_MAP_TABLE + swapPID*10 + counter];
                R3 = R0;
                R2 = SWAPPER_DAEMON;
                R1 = DISK_LOAD;
                call MOD_4;
                multipop(R1, R2, R3, R4, R5, R6);
                
                R2 = [DISK_MAP_TABLE + swapPID*10 + counter];
                R1 = RELEASE_BLOCK;
                call MOD_2;

                [DISK_MAP_TABLE + swapPID*10 + counter] = -1;
            endif;

            counter = counter + 1;
        endwhile;

        [PROCESS_TABLE + swapPID*16 + 6] = 0;
        [SYSTEM_STATUS_TABLE + 4] = [SYSTEM_STATUS_TABLE + 4] - 1;
    endif;
            
    [SYSTEM_STATUS_TABLE + 5] = 0;
endif;

return;