alias funNo R1;
alias RelPage R2;

if(funNo == GET_FREE_PAGE)then
    //print "getfree while";
    [SYSTEM_STATUS_TABLE + 3] = [SYSTEM_STATUS_TABLE + 3] + 1;
    while([SYSTEM_STATUS_TABLE + 2] == 0)do
        [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 4] = WAIT_MEM;
        multipush(R1, R2);
        //print "sheduling";
        call MOD_5;
        multipop(R1, R2);
    endwhile;
    [SYSTEM_STATUS_TABLE + 2] = [SYSTEM_STATUS_TABLE + 2] - 1;
    [SYSTEM_STATUS_TABLE + 3] = [SYSTEM_STATUS_TABLE + 3] - 1;

    alias freepage R0;
    freepage = 83;
    while(freepage<128 && [MEMORY_FREE_LIST + freepage]!=0)do   
        freepage = freepage + 1;
    endwhile;

    [MEMORY_FREE_LIST + freepage] = 1;
    return;
endif;
if(funNo == RELEASE_PAGE)then  
    //print "rel pag";
    [MEMORY_FREE_LIST + RelPage] = [MEMORY_FREE_LIST + RelPage] - 1;
    if([MEMORY_FREE_LIST + RelPage]==0)then 
        [SYSTEM_STATUS_TABLE + 2] = [SYSTEM_STATUS_TABLE + 2] + 1;
        alias count R7;
        count = 0;
        while(count < 16)do 
            if([PROCESS_TABLE + count*16 + 1]!=-1 && [PROCESS_TABLE + count*16 + 4]==WAIT_MEM)then
                [PROCESS_TABLE + count*16 + 4]=READY;
            endif;
            count = count + 1;
        endwhile;
    endif;
    R0 = RelPage;
    return;
endif;  
return;